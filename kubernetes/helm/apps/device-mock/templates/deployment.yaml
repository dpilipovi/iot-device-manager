---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ .Chart.Name }}
  name: {{ .Chart.Name }}
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ .Values.applicationPort | quote }}
        prometheus.io/path: "/{{ .Chart.Name }}/actuator/prometheus"
        prometheus.io/scheme: "http"
    spec:
      containers:
        - image: {{ .Values.image.repository }}/{{ .Values.image.tag }}:{{ .Chart.Version }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          name: {{ .Chart.Name }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.activeProfiles }}
            - name: TZ
              value: Europe/Zagreb
            - name: JAVA_TOOL_OPTIONS
              value: -XX:MaxRAMPercentage=90 -XX:InitialRAMPercentage=50 -XX:MinRAMPercentage=25
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: host
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-conf
                  key: name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-credentials
                  key: postgres_password
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          livenessProbe:
            httpGet:
              path: /{{ .Chart.Name }}/actuator/health/liveness
              port: {{ .Values.applicationPort }}
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /{{ .Chart.Name }}/actuator/health/readiness
              port: {{ .Values.applicationPort }}
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 5